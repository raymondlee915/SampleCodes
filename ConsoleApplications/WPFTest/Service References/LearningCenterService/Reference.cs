//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFTest.LearningCenterService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarrantyInfo", Namespace="http://schemas.datacontract.org/2004/07/Dell.Tribbles.Plugins.Warranty.Contracts")]
    [System.SerializableAttribute()]
    public partial class WarrantyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitlementTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceLevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceLevelDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceLevelGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitlementType {
            get {
                return this.EntitlementTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitlementTypeField, value) != true)) {
                    this.EntitlementTypeField = value;
                    this.RaisePropertyChanged("EntitlementType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceLevelCode {
            get {
                return this.ServiceLevelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLevelCodeField, value) != true)) {
                    this.ServiceLevelCodeField = value;
                    this.RaisePropertyChanged("ServiceLevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceLevelDescription {
            get {
                return this.ServiceLevelDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLevelDescriptionField, value) != true)) {
                    this.ServiceLevelDescriptionField = value;
                    this.RaisePropertyChanged("ServiceLevelDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceLevelGroup {
            get {
                return this.ServiceLevelGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceLevelGroupField, value) != true)) {
                    this.ServiceLevelGroupField = value;
                    this.RaisePropertyChanged("ServiceLevelGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LearningCenterService.IWarrantyCapabilityApi")]
    public interface IWarrantyCapabilityApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/IsMachineRegistered", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/IsMachineRegisteredResponse")]
        bool IsMachineRegistered(string serviceTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/IsMachineRegistered", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/IsMachineRegisteredResponse")]
        System.Threading.Tasks.Task<bool> IsMachineRegisteredAsync(string serviceTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/IsKickStartApplicationInstalled", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/IsKickStartApplicationInstalledResponse" +
            "")]
        bool IsKickStartApplicationInstalled();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/IsKickStartApplicationInstalled", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/IsKickStartApplicationInstalledResponse" +
            "")]
        System.Threading.Tasks.Task<bool> IsKickStartApplicationInstalledAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/GetWarranties", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/GetWarrantiesResponse")]
        WPFTest.LearningCenterService.WarrantyInfo[] GetWarranties(string serviceTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/GetWarranties", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/GetWarrantiesResponse")]
        System.Threading.Tasks.Task<WPFTest.LearningCenterService.WarrantyInfo[]> GetWarrantiesAsync(string serviceTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/Ping", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWarrantyCapabilityApi/Ping", ReplyAction="http://tempuri.org/IWarrantyCapabilityApi/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWarrantyCapabilityApiChannel : WPFTest.LearningCenterService.IWarrantyCapabilityApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WarrantyCapabilityApiClient : System.ServiceModel.ClientBase<WPFTest.LearningCenterService.IWarrantyCapabilityApi>, WPFTest.LearningCenterService.IWarrantyCapabilityApi {
        
        public WarrantyCapabilityApiClient() {
        }
        
        public WarrantyCapabilityApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WarrantyCapabilityApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarrantyCapabilityApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WarrantyCapabilityApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsMachineRegistered(string serviceTag) {
            return base.Channel.IsMachineRegistered(serviceTag);
        }
        
        public System.Threading.Tasks.Task<bool> IsMachineRegisteredAsync(string serviceTag) {
            return base.Channel.IsMachineRegisteredAsync(serviceTag);
        }
        
        public bool IsKickStartApplicationInstalled() {
            return base.Channel.IsKickStartApplicationInstalled();
        }
        
        public System.Threading.Tasks.Task<bool> IsKickStartApplicationInstalledAsync() {
            return base.Channel.IsKickStartApplicationInstalledAsync();
        }
        
        public WPFTest.LearningCenterService.WarrantyInfo[] GetWarranties(string serviceTag) {
            return base.Channel.GetWarranties(serviceTag);
        }
        
        public System.Threading.Tasks.Task<WPFTest.LearningCenterService.WarrantyInfo[]> GetWarrantiesAsync(string serviceTag) {
            return base.Channel.GetWarrantiesAsync(serviceTag);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
