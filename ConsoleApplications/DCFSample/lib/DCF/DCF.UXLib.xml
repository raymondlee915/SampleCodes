<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCF.UXLib</name>
    </assembly>
    <members>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm">
            <summary>
            This class implements a Windows form class in order to provide the styling that Dell EDG desires.  This class serves as the base class 
            for all UXLib dialogs and forms.  It essentially implements a frameless, borderless form that supports resizing and Aero glass effects.  
            By default, Windows will not allow the Aero glass effect on a windows without a border.  So to make this work, we have to make Windows 
            think this is a basic form with a single pixel default border and not let Windows handle any default paint or resize processing.  
            This form also supports the display of an EDG styled grip handle in the lower right corner.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.#ctor">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.CloseDialog">
            <summary>
            This public method is supplied so that a thread which did not create this dialog may
            request that it be closed.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.OnActivated(System.EventArgs)">
            <summary>
            Called when the window is activating.  We must insure that the window is invalidated so a repaint will occure to show the glass if it is enabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.OnDeactivate(System.EventArgs)">
            <summary>
            Called when the window is deactivating.  We must insure that the window is invalidated so a repaint will occur to hide the glass.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method is called to paint the window.  We first insure that a region is active if glass is enabled.  Then we allow the base
            class to paint the window.  Then we paint the grip image and border if they are enabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.OnResize(System.EventArgs)">
            <summary>
            This method is called when the Resize event is raised.  If glass is enabled, we need to recreate our region and repaint.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.SetClientSizeCore(System.Int32,System.Int32)">
            <summary>
            Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This method overrides Windows message procedure in order to change the default behavior of specific messages it cares about.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcDwmCompositionChanged(System.Windows.Forms.Message@)">
            <summary>
            This message is called by Windows to inform all top-level windows that Desktop Window Manager (DWM) composition has been enabled or disabled.  
            Note: As of Windows 8, DWM composition is always enabled, so this message is not sent regardless of video mode changes.
            This method rechecks to see if glass composition is available on the operating system.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcEraseBkgnd(System.Windows.Forms.Message@)">
            <summary>
            Sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            An application should set m.Result to nonzero if it erases the background; otherwise, it should return zero
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcNcActivate(System.Windows.Forms.Message@)">
            <summary>
            Sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.  We hook this
            so that we can correctly draw in visual designer mode.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcNcCalcSize(System.Windows.Forms.Message@)">
            <summary>
            Sent when the size and position of a window's client area must be calculated. By processing this message, an application 
            can control the content of the window's client area when the size or position of the window changes. 
            If m.WParam is zero, then m.Result should always be set to zero.
            If w.WParam is nonzero and we are maximized, then we return rectangles that do not include the reduced sizes for the glass frame. 
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcNcHitTest(System.Windows.Forms.Message@)">
            <summary>
            This method checks for a non-client hit test and returns the appropriate value.  This is where we notify windows that 
            the mouse in in a resize area and let Windows know what type of window resizing is in effect.   Since we support both 
            a resize region around the frame and a grip image, we must first check to see if the mouse is over the grip image (if enabled)
            before we check to see if the mouse is in one of the resize regions.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcNcPaint(System.Windows.Forms.Message@)">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.  An application can intercept the 
            WM_NCPAINT message and paint its own custom window frame. The clipping region for a window is always rectangular, 
            even if the shape of the frame is altered.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcSetIcon(System.Windows.Forms.Message@)">
            <summary>
            Associates a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            We have to hook this message because we want Windows to process this message with the window not visible.  So we temporarily turn this flag off and let
            Windows process the message, and then turn it back on if was already visible.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.WndProcSetText(System.Windows.Forms.Message@)">
            <summary>
            This method is called when the WM_SETTEXT message is sent to set the text of the window. 
            We have to hook this message because we want Windows to process this message with the window not visible.  So we temporarily turn this flag off and let
            Windows process the message, and then turn it back on if was already visible.
            </summary>
            <param name="m">Structure containing the Msg, wParam, lParam, hWnd values from the Windows procedure as well as the result to return to the WndProc.</param>
            <returns>Returns boolean indicating whether or not to let the default Windows handler process this message.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.BuildEdgePaths">
            <summary>
            This method rebuilds the edge paths that are used for resizing the frame.  It is called when the object 
            is constructed and every time the form is resized.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.ExtendGlass">
            <summary>
            This method extends the frame into the client area and enables the glass border if Aero effects are supported on the
            operating system.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.GetDefaultRegion">
            <summary>
            Returns a new default region for the form that is equivalent to the window rectangle.
            </summary>
            <returns>A region object consisting of a simple rectangle equivalent to the window's width and height.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.GetWindowState">
            <summary>
            Retrieves the show state and the restored, minimized, and maximized positions of the specified window by calling the
            GetWindowPlacement() api.  If this api fails, the form WindowState is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.IsPointInGripImage(System.Drawing.Point)">
            <summary>
            Returns a boolean indicating whether or not the point is in the grip image.
            </summary>
            <param name="point"></param>
            <returns>True if the point is in the grip image, or false otherwise.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.OnResizeEvent(System.Object,System.EventArgs)">
            <summary>
            This method is called when the form is resized.  When this happens, we need to rebuild the edge paths.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.BorderColor">
            <summary>
            Gets or set the color of the border.  Use Color.Transparent to disable the border.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.DisableGlass">
            <summary>
            Gets or sets a value which will force the glass effect off regardless of whether it is supported
            by the OS.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.EdgeSize">
            <summary>
            Gets or sets the size of the edge used for resizing the window.  The default value is 5,5.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseForm.IsGlassEnabled">
            <summary>
            Returns a value indicating whether or not the glass effect is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsole">
            <summary>
            Defines the interface into the Framework's Console.  This interface is presented to ConsolePlugins
            when the plugins are instantiated.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.AddGearMenuItem(System.String,System.Int32,System.EventHandler)">
            <summary>
            Creates and adds a menuitem to the gear at the requested position. 
            </summary>
            <param name="menuItemText"></param>
            <param name="menuPosition"></param>
            <param name="clickEvent"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.AddTileToHomePage(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Adds a tile to the home page.
            </summary>
            <param name="tile"></param>
            <param name="position"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.AddTrayMenuItem(System.String,Dell.Client.Framework.UXLib.ConsoleTrayMenuSection,System.EventHandler)">
            <summary>
            Creates and adds a menuitem to the console's context menu in the specified section.
            </summary>
            <param name="menuItemText"></param>
            <param name="menuSection"></param>
            <param name="clickEvent"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.DisallowAppClosing">
            <summary>
            Called by a plugin if it requires the application to always be running
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.FindPluginByGuid(System.Guid)">
            <summary>
            Find a Console plugin by its unique identifer or return null if not found.
            </summary>
            <remarks>
            <para>
            This method will return an interface to a loaded plugin whose identifier
            is the same as the one specified in guid.  If the plugin is
            not found, null is returned.  
            </para>
            <para>
            Since this method only knows of IFrameworkPlugin interfaces, it is good practice to 
            validate that the interface you get back is what you expected.
            </para>
            </remarks>
            <param name="guid">Identifier of the requested plugin interface.</param>
            <returns>An interface to the Console plugin whose Guid matches the requested Guid or null if no
            plugin was found.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.FindPluginById(System.String)">
            <summary>
            Find a Console plugin by its unique identifer or return null if not found.
            </summary>
            <remarks>
            <para>
            This method will return an interface to a loaded plugin whose identifier
            is the same as the one specified in Id.  If the plugin is
            not found, null is returned.  
            </para>
            <para>
            Since the agent only knows of IFrameworkPlugin interfaces, it is good practice to 
            validate that the interface you get back is what you expected.
            </para>
            </remarks>
            <param name="id">Identifier of the requested plugin interface.</param>
            <returns>An interface to the Console plugin whose Id matches the requested Id or null if no
            plugin was found.</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.FindPluginByType(System.Type)">
            <summary>
            Finds the first Console plugin of a given type or return null if not found.  
            </summary>
            <param name="interfaceType"></param>
            <returns></returns>
            <remarks>
            This method will return an interface to a loaded plugin who is 
            compatible with the given type, i.e whose's object "is" of the given type.
            If no object is found, null is returned.
            <br/><br/>
            This method is useful if there is only one possible type of a given plugin
            loaded.  If there are multiple plugins that could be of the specified <paramref name="interfaceType"/>, 
            you should use the <see cref="M:Dell.Client.Framework.UXLib.IConsole.FindPluginsByType(System.Type)"/> method.
            <br/><br/>
            If this method returns a non-null value indicating that an object was found, the
            object returned has already be validated to be of the specified type, so you 
            may safely cast the return to that object type.
            </remarks>
            <example>
            <code>
            plugin = (IAppConsoleAdminPagePlugin)Agent.FindPluginByType(typeof(IAppConsoleAdminPagePlugin));
            if (plugin == null)
                return ErrorPluginNotFound;
            </code>
            </example>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.FindPluginsByType(System.Type)">
            <summary>
            Finds the all the plugins of a given type and returns them in a list.  If none are found,
            the list will contain zero elements.
            </summary>
            <param name="interfaceType"></param>
            <returns></returns>
            <remarks>
            This method will return a list of loaded plugins who are compatible with the 
            given type, i.e whose's object "is" of the given type.  If no objects are found, the list will 
            contain no elements.
            <br/><br/>
            Each object returned in the list has already been validated to be of the requested type, so you 
            may safely cast the return to that object type.
            </remarks>
            <example>
            <code>
            List&lt;IFrameworkPlugin&gt; Plugins = Agent.FindPluginsByType(typeof(IAppConsoleAdminPagePlugin));
            foreach (IFrameworkPlugin plugin in Plugins)
                ((IAppConsoleAdminPagePlugin)plugin).DoSomething();
            </code>
            </example>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.RaiseEvent(System.String,System.Object,Dell.Client.Framework.Common.EventManagerArgs)">
            <summary>
            This method causes an event to be raised.  All subscribers to the specified eventName wil
            be signaled.
            </summary>
            <param name="eventName"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.RegisterForEvent(System.String,Dell.Client.Framework.Common.EventManagerHandler)">
            <summary>
            This method allows an plugin to register for events that is wants to subscribe to.
            The event is specified by name.  
            </summary>
            <param name="eventName"></param>
            <param name="handler"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.RedrawWindow">
            <summary>
            This method causes the console to redraw its window.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.RemoveTileFromHomePage(Dell.Client.Framework.UXLib.Controls.UXTile)">
            <summary>
            Removes a tile from the home page.
            </summary>
            <param name="tile"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.RequestAdminElevation(System.String)">
            <summary>
            Request that the console restart with elevated privileges and then show the specified
            plugin.
            </summary>
            <param name="pluginId"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.ShowHomePage">
            <summary>
            Causes the console to show the home screen.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.ShowMessageBox(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons)">
            <summary>
            Shows a modal message box.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.ShowMessageBox(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons,Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Shows a modal message box.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.ShowPlugin(Dell.Client.Framework.UXLib.IConsolePagePlugin)">
            <summary>
            Shows a page plugin.
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.ShowPluginById(System.String)">
            <summary>
            Shows a page plugin by its plugin ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.StartWindowsService(System.String)">
            <summary>
            Starts a Windows service and returns true if successful.
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsole.UnloadPlugin(Dell.Client.Framework.UXLib.IConsolePlugin)">
            <summary>
            Unloads a page plugin
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.IConsole.FormClosingEvent">
            <summary>
            Called when the framework is closing - allows plugins to stop and release resources
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.IConsole.LogEvent">
            <summary>
            Called when the framework has a message to log
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.IConsole.PanelAssociatedEvent">
            <summary>
            Called after all the panels have been associated with a navigation page.  This event gives
            navigation pages an chance to remove any items that do not have panels associated with them.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.IConsole.PluginsLoadedEvent">
            <summary>
            Called after all the plugins are loaded.  This gives plugins a chance to query for other plugins
            or decide to unload themselves if required resources are not present.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsole.HelpFilePath">
            <summary>
            Gets the full path to the help file (.chm)
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsole.Log">
            <summary>
            Gets the Log object for the console.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsole.ParentForm">
            <summary>
            Returns the parent form
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsole.ProductName">
            <summary>
            Gets the product name 
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsole.ProductRegKey">
            <summary>
            Gets the product registry key root value.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.#ctor(System.String,System.String,System.Drawing.Icon)">
            <summary>
            This initializes the object in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.#ctor(System.String,System.String,System.Drawing.Icon,System.String[],Dell.Client.Framework.Common.Log)">
            <summary>
            This constructs the object and allows startup arguments to be specified.
            </summary>
            <param name="strProductName"></param>
            <param name="strServiceName"></param>
            <param name="appIcon"></param>
            <param name="args"></param>
            <param name="log"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.AddGearMenuItem(System.String,System.Int32,System.EventHandler)">
            <summary>
            Creates and adds a menuitem to the gear at the requested position. 
            </summary>
            <param name="menuItemText"></param>
            <param name="menuPosition"></param>
            <param name="clickEvent"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.AddTileToHomePage(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Adds a tile to the home page.
            </summary>
            <param name="tile"></param>
            <param name="position"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.AddTrayMenuItem(System.String,Dell.Client.Framework.UXLib.ConsoleTrayMenuSection,System.EventHandler)">
            <summary>
            Creates and adds a menuitem to the console's context menu in the specified section.
            </summary>
            <param name="menuItemText"></param>
            <param name="menuSection"></param>
            <param name="clickEvent"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.DisallowAppClosing">
            <summary>
            Called by a plugin if it requires the application to always be running
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.FindPluginByGuid(System.Guid)">
            <summary>
            Returns a plugin interface with the specified Guid, or null if not found
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.FindPluginById(System.String)">
            <summary>
            Returns a plugin interface with the specified ID, or null if not found.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.FindPluginByType(System.Type)">
            <summary>
            Returns the first plugin interface with the specified interface type, or null if not found
            </summary>
            <param name="interfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.FindPluginsByType(System.Type)">
            <summary>
            Returns a list of plugin interfaces with the specified interface type.
            </summary>
            <param name="interfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.RaiseEvent(System.String,System.Object,Dell.Client.Framework.Common.EventManagerArgs)">
            <summary>
            This method causes an event to be raised.  All subscribers to the specified eventName wil
            be signaled.
            </summary>
            <param name="eventName">A string containing the name of the event.  It is recommended that these names be Guid.ToString() values.</param>
            <param name="sender">The object raising the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.RegisterForEvent(System.String,Dell.Client.Framework.Common.EventManagerHandler)">
            <summary>
            This method allows an Agent plugin to register for events that is wants to subscribe to.
            The event is specified by name.  
            </summary>
            <param name="eventName">A string containing the name of the event.  It is recommended that these names be Guid.ToString() values.</param>
            <param name="handler">Specifies a handler to call when the event is raised.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.RedrawWindow">
            <summary>
            This method causes the console to redraw its window.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.RemoveTileFromHomePage(Dell.Client.Framework.UXLib.Controls.UXTile)">
            <summary>
            Removes a tile from the home page.
            </summary>
            <param name="tile"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.RequestAdminElevation(System.String)">
            <summary>
            Request that the console restart with elevated privileges and then show the specified
            plugin.
            </summary>
            <param name="pluginId"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.ShowHomePage">
            <summary>
            Causes the console to show the home screen.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.ShowMessageBox(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons)">
            <summary>
            Shows a modal message box.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.ShowMessageBox(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons,Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Shows a modal message box.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.ShowPlugin(Dell.Client.Framework.UXLib.IConsolePagePlugin)">
            <summary>
            Shows a page plugin.
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.ShowPluginById(System.String)">
            <summary>
            Shows a page plugin by its plugin ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.StartWindowsService(System.String)">
            <summary>
            Starts a Windows service and returns true if successful.
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.UnloadPlugin(Dell.Client.Framework.UXLib.IConsolePlugin)">
            <summary>
            Unloads a page plugin
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.AssociatePanelsToPages">
            <summary>
            This method associates all loaded panels to the pages.  
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.BuildHelpFileName">
            <summary>
            This method builds the help file name from the entry assembly.  All help files must be placed in a 
            help subdirectory relative to where then entry assembly is executing.  It will first look for an 
            exact match based on the culture, then it will try for a parent match, then it will default to no
            culture.  So if the intent is to have english be the default, it must be the one without a culture
            identifier on the file name.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.LoadHomePagePluginCallback(Dell.Client.Framework.UXLib.IConsoleHomePagePlugin)">
            <summary>
            This is the callback for HomePagePlugins.  We only allow a single one since there 
            can only be a single home screen.
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.LogPluginException(Dell.Client.Framework.Common.IFrameworkPlugin,System.Exception,System.String)">
            <summary>
            Logs an exception from a plugin. 
            </summary>
            <param name="plugin"></param>
            <param name="ex"></param>
            <param name="method"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsoleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.AgentServiceName">
            <summary>
            Gets or sets the Agent service name.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.FooterText">
            <summary>
            Gets or sets the text to display in the footer.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.HeaderText">
            <summary>
            Gets or sets the text to display in the header home page.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.HelpFileWindowName">
            <summary>
            Gets or sets the help file's window name.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.SplashScreenText">
            <summary>
            Gets or sets the text to display on the splash screen
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Console.ConsoleForm.FormClosingEvent">
            <summary>
            Called when the framework is closing - allows plugins to stop and release resources
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Console.ConsoleForm.LogEvent">
            <summary>
            Called when the framework has a message to log
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Console.ConsoleForm.PanelAssociatedEvent">
            <summary>
            Called after all the panels have been associated with a navigation page.  This event gives
            navigation pages an chance to remove any items that do not have panels associated with them.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Console.ConsoleForm.PluginsLoadedEvent">
            <summary>
            Called after all the plugins are loaded.  This gives plugins a chance to query for other plugins
            or decide to unload themselves if required resources are not present.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.HelpFilePath">
            <summary>
            Gets the full path to the help file (.chm)
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.Log">
            <summary>
            Gets the log object for the console.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.ParentForm">
            <summary>
            Returns the parent form
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.ProductName">
            <summary>
            Gets the product name 
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.ProductRegKey">
            <summary>
            Gets the product registry key root value.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.SplashStatusText">
            <summary>
            Sets the splash screen text.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleForm.StartupArgs">
            <summary>
            Returns the arguments used when starting the application
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Console.ConsoleModal">
            <summary>
            This class implements a base modal dialog that supports a header styled as EDG desires.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.#ctor">
            <summary>
            Constructs the object in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.AddMouseEvents(System.Windows.Forms.Control)">
            <summary>
            Adds events to the given control to track the mouse so we can move the window.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.OnCloseClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the close button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.OnLoad(System.Object,System.EventArgs)">
            <summary>
            This method is called when the form loads before it is shown.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse down event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse move event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse up event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsoleModal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleModal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleModal.HeaderIcon">
            <summary>
            Gets or sets the icon image in the header.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleModal.HeaderText">
            <summary>
            Gets or sets the text in the header.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleModal.HeaderTextColor">
            <summary>
            Gets or sets the color of the header text
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleModal.HeaderTextFont">
            <summary>
            Gets or sets the font to use with the header text
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePagePluginPaintsInFrame">
            <summary>
            This interface defines the api that allows a page plugin to draw in the parent frame.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.IsPageDirty(System.String@)">
            <summary>
            Indicates whether the property page has changed since it was activated or since 
            the most recent call to Apply.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.SaveDirtyPage">
            <summary>
            Needed to show dirty page(s) when closing console.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.SelectNavItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem)">
            <summary>
            Selects a navigation item.  
            </summary>
            <param name="navItem"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.OnPanelsAssociated(System.Object,System.EventArgs)">
            <summary>
            Called with all panels have been loaded.  If there are no navigation items
            to display, then just unload this page
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNav.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Console.ConsolePanel">
            <summary>
            This user control implements a base application panel class that includes header and prompt strings
            that describe what the panel does.  These strings are styled according to EDG guidelines.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanel.#ctor">
            <summary>
            This initializes the object in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanel.OnResize(System.EventArgs)">
            <summary>
            Overrides resize to wrap the strings if necessary.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsolePanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsolePanel.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsolePanel.PromptText">
            <summary>
            Gets or sets the prompt text.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsolePanelLeftNavSettings.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanelLeftNavSettings.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePanelLeftNavSettings.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNavSettings.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNavSettings.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsolePageLeftNavSettings.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Console.ConsoleApp">
            <summary>
            This class implements a console application.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.ConsoleApp.Run(System.String[])">
            <summary>
            This is the static method that starts the administrative console.  It requires
            administrator privileges to run, so it will request elevation.
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.AgentServiceName">
            <summary>
            Gets or sets the Agent service name.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.ApplicationIcon">
            <summary>
            Gets or sets the application icon
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.FooterText">
            <summary>
            Gets or sets the text to display in the footer.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.HeaderText">
            <summary>
            Gets or sets the text to display in the header home page.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.HelpFileWindowName">
            <summary>
            Gets or sets the help file's window name.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.ProductName">
            <summary>
            Gets or sets the product name.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.ConsoleApp.SplashScreenText">
            <summary>
            Gets or sets the text to display on the splash screen
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.CreateNavItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem,System.String,System.String,System.Int32,System.Windows.Forms.Control)">
            <summary>
            Creates a navigation item for the given page.
            </summary>
            <param name="parentItem">Parent item or null to create a top level left nav item.</param>
            <param name="text">Text to display in the nav item.</param>
            <param name="description">Description text to display if this is a top-level item.</param>
            <param name="listOrder">Relative order in the list.</param>
            <param name="ctl">Control to show when this nav item is selected, or null if this is a top-level item with children.</param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.EnableNextButton(Dell.Client.Framework.UXLib.Console.WizardPanel,System.Boolean)">
            <summary>
            Called by the panel to enable the next button.
            </summary>
            <param name="panel"></param>
            <param name="bEnabled"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.FindNavItem(System.String)">
            <summary>
            Returns the left navigation item that has the specified text, or null if none are found.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.SelectNavItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem)">
            <summary>
            Selects a navigation item.  
            </summary>
            <param name="navItem"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.OnActivatingPanel(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem)">
            <summary>
            If this is the last panel of the wizard, switch the Next button to Apply
            If this is the first panel of the wizard, hide the back button.
            </summary>
            <param name="navItem"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.OnPanelsAssociated(System.Object,System.EventArgs)">
            <summary>
            Called with all panels have been loaded.  If there are no navigation items
            to display, then just unload this page
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.WizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Console.WizardPanel">
            <summary>
            This class implements a base wizard panel formatted according to EDG style guidelines.  
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.#ctor">
            <summary>
            This initializes the object in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.OnPerformWizard(System.String@,System.String@)">
            <summary>
            This is called when the Apply button is clicked
            </summary>
            <param name="summaryInfo"></param>
            <param name="errorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.OnNextClickValidate">
            <summary>
            Called when the next button is clicked
            If false is returned the next button action will not be preformed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.OnBackClickValidate">
            <summary>
            Called when the back button is clicked
            If false is returned the back button action will not be preformed
            </summary>
            <returns></returns>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Console.WizardPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Console.WizardPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.WizardPanel.HeaderText">
            <summary>
            Gets or sets the header text.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Console.WizardPanel.PromptText">
            <summary>
            Gets or sets the header text.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.ControlHelper">
            <summary>
            This static class provides various helper functions for working with Windows Forms controls.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.ControlHelper.CenterControlHorz(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Reposition a Control so that it is centered in the given widith.  Note the control's
            Y location will not be changed.
            </summary>
            <param name="ctl"></param>
            <param name="width"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.ControlHelper.GetImagePos(System.Windows.Forms.Control,System.Drawing.ContentAlignment,System.Drawing.Size)">
            <summary>
            Returns the location of the control's image
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.ControlHelper.GetImageBounds(System.Windows.Forms.Control,System.Drawing.ContentAlignment,System.Drawing.Size)">
            <summary>
            Returns the bounding box of the control's image
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.ControlHelper.GetTextArea(System.Windows.Forms.Control,System.Drawing.ContentAlignment,System.Drawing.Size)">
            <summary>
            Returns the bounding box of the text excluding the image's bounding box and adjusted
            for image alignment.
            </summary>
            <param name="ctl"></param>
            <param name="imageAlign"></param>
            <param name="imageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.ControlHelper.GetTextBounds(System.Windows.Forms.Control,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.ContentAlignment,System.Int32)">
            <summary>
            Returns the rectangle used to draw text based upon a bounding rectangle and a text alignment.
            </summary>
            <param name="ctl"></param>
            <param name="g"></param>
            <param name="textBounds"></param>
            <param name="textAlign"></param>
            <param name="xPad"></param>
            <returns></returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.ControlHelper.ComboBoxEntry">
            <summary>
            Defines an entry value for a ComboBox.  
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXDropDownArrow">
            <summary>
            This class implements a UXDropDownArrow class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXImageButtonBase">
            <summary>
            This class implements a UXImageButtonBase class which is a special type of UXImageButton which
            removes the Images from the designer.  This is used primarily as a base object for other ImageButton
            classes when have predefined images.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXImageButton">
            <summary>
            This class implements a UXButton whose background is an image.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXButton">
            <summary>
            This class implements a base button class by extending the Windows Form Button class and
            adding additional painting behaviors in order to meet the Dell EDG Clarity specifications.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.#ctor">
            <summary>
            Initializes a new instance of the UXButton class.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.OnEnabledChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)"/>, and more complete documentation might be available 
            in that topic.
            </summary>
            <param name="e"></param>
            <remarks>
            This override is necessary to paint the button correctly per Dell EDG guidelines.
            </remarks>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.OnGotFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)"/>, and more complete documentation might be available in that topic.
            </summary>
            <param name="e"></param>
            <remarks>
            This override is necessary to paint the button correctly per Dell EDG guidelines.
            </remarks>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/>, and more complete documentation might be available in that topic.
            </summary>
            <param name="kevent"></param>
            <remarks>
            This override is necessary to paint the button correctly per Dell EDG guidelines.
            </remarks>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)"/>, and more complete documentation might be available in that topic.
            </summary>
            <param name="kevent"></param>
            <remarks>
            This override is necessary to paint the button correctly per Dell EDG guidelines.
            </remarks>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXButton.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButton.BorderColor">
            <summary>
            Border color of the button or transparent if no border is 
            desired
            </summary>
            <remarks>
            This property contains the color used to draw the border of the button.
            </remarks>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButton.IsBrowsed">
            <summary>
            Gets a value indicating whether the button is browsed.
            </summary>
            <remarks>
            This property is true if the mouse is inside the button bounds.
            </remarks>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButton.IsPrimary">
            <summary>
            Gets a value indicating whether the button is to be draw as a primary button
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButton.IsPressed">
            <summary>
            Gets a value indicating whether the button is pressed.
            </summary>
            <remarks>
            This property is true if the button is pressed.
            </remarks>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXImageButton.ImageNormal">
            <summary>
            Gets or sets the image to use for normal or default states.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXImageButton.ImagePressed">
            <summary>
            Gets or sets the image to use when the button is pressed.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXImageButton.ImageDisabled">
            <summary>
            Gets or sets the image to use when the button is disabled.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXImageButton.ImageHover">
            <summary>
            Gets or sets the image to use when the mouse is hovering over the button.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXDropDownArrow.#ctor(System.Boolean)">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXDropDownArrow.IsDarkUI">
            <summary>
            Sets the bitmaps for dark or light background.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXBackButton">
            <summary>
            This class implements a UXBackButton class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXBackButton.#ctor(System.Boolean)">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXBackButton.IsDarkUI">
            <summary>
            Sets the bitmaps for dark or light background.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXMastheadLightUI">
            <summary>
            This class implements the UXMasthead custom control for light backgrounds.  The colors and layout are determined
            EDG's Clarity Specification.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXMasthead">
            <summary>
            This class implements the UXMasthead custom control.  The colors and layout are determined
            EDG's Clarity Specification.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the class with default settings.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.AddGearItem(System.String,System.Int32,System.EventHandler)">
            <summary>
            Adds a new item to the gear submenu.
            </summary>
            <param name="menuText"></param>
            <param name="menuPosition"></param>
            <param name="clickEvent"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.SetHomeMode(System.Boolean,System.String)">
            <summary>
            Sets the Masthead in the "Home" mode which hides the back button and displays
            the logo button.
            </summary>
            <param name="bHome"></param>
            <param name="headerText"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.AddMouseEvents(System.Windows.Forms.Control)">
            <summary>
            Adds events to the given control to track the mouse so we can notify the form when 
            to move its window.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnBackButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the back button is pressed.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnCloseButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the close button is pressed.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when this control is double-clicked.  We cause the parent form
            to maximize or restore its window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnDropDownButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the dropdown button is pressed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnGearButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the gear button is pressed.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnHelpButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when the help button is pressed.  
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse down event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse move event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the mouse up event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXMasthead.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMasthead.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.BackColor">
            <summary>
            Gets or sets the background color for the control.  This property is removed from the UI 
            designer since this property is defined by EDG.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.  This property is removed from the UI 
            designer since this property is defined by EDG.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.HeaderText">
            <summary>
            Gets or sets the text associated with the header.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.HelpBox">
            <summary>
            Gets or sets a value that indicates whether the Help button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.IsDarkUI">
            <summary>
            Sets the bitmaps for dark or light background.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.MaximizeBox">
            <summary>
            Gets or sets a value that indicates whether the Maximize button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.MinimizeBox">
            <summary>
            Gets or sets a value that indicates whether the Minimize button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.UserNameText">
            <summary>
            Sets the user name text.  If the user name text is null or empty,
            the name and prompt fields are hidden.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXMasthead.WindowControlButtonsEnabled">
            <summary>
            Gets or sets a value indicating whether the window control buttons can respond to user interaction.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXMasthead.BackButtonClick">
            <summary>
            Occurs when the back button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXMasthead.CloseButtonClick">
            <summary>
            Occurs when the close button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXMasthead.DropDownButtonClick">
            <summary>
            Occurs when the dropdown button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXMasthead.GearButtonClick">
            <summary>
            Occurs when the gear button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXMasthead.HelpButtonClick">
            <summary>
            Occurs when the help button is clicked.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMastheadLightUI.#ctor">
            <summary>
            Initializes a new instance of the class with default settings for windows with 
            light background colors.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXMastheadDarkUI">
            <summary>
            This class implements the UXMasthead custom control for dark backgrounds.  The colors and layout are determined
            EDG's Clarity Specification.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXMastheadDarkUI.#ctor">
            <summary>
            Initializes a new instance of the class with default settings for windows with 
            dark background colors.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXTextBoxLightUI">
            <summary>
            This class implements a text box control that is drawn on a parent whose background is light.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXUserControl">
            <summary>
            This class defines a base control for the UX library.  This class 
            tracks whether the object is pressed (mouse down) or browsed (mouse enter/leave).  
            It also supplies virtual methods for handling painting.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.#ctor">
            <summary>
            This initializes the object in default state.  Note that this control enables transparent background
            support.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnEnabledChanged(System.EventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when the Enable state changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnGotFocus(System.EventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when it receives focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnLostFocus(System.EventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when it loses focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when clicked.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when the mouse is hovered over the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when the mouse leaves the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override to invalidate the control so that it will be repainted when then mouse press ends.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXUserControl.PaintFocusRect(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method draws the focus rectangle
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXUserControl.IsPressed">
            <summary>
            Gets or sets a value that indicates whether the mouse is being clicked inside this control.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXUserControl.IsBrowsed">
            <summary>
            Gets or sets a value that indicates if the mouse is within the bounds of this control.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXTextBox.ExtTextBox">
            <summary>
            This class derives from the Windows Forms TextBox control and forces specific colors as 
            defined in the UX Style Guide.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTextBox.ExtTextBox.CreateCaretBitmap">
            <summary>
            This method creates a bitmap that can be used for the caret.  For some reason,
            the desired color needed to be XORed in order to display correctly.  TODO - need to 
            understand why.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTextBox.ExtTextBox.UpdateColors">
            <summary>
            This method sets the appropriate background and text colors based upon the control's
            state as defined by the UX style guide.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXTextBoxDarkUI">
            <summary>
            This class implements a text box control that is drawn on a parent whose background is dark.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXScrollBar2">
            <summary>
            This class implements a EDG custom scrollbar
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXPanel3.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXPanelTest.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXSliderDarkUI">
            <summary>
            This class implements a slider control that is drawn on a parent whose background is dark.
            
            TODO - Need assets for DarkUI from Jaclyn
            TODO - Need color values for track back/fore color
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXSlider">
            <summary>
            This class implements a slider control styled according to EDG Clarity specifications.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXControl">
            <summary>
            This class defines a base control for the UX library.  This
            class tracks whether the object is pressed (mouse down) or browsed
            (mouse enter/leave).  It also supplies virtual methods for 
            handling painting.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.#ctor">
            <summary>
            This initializes the object in default state.  Note that this control enables transparent background
            support.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.EnabledChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.GotFocus event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.LostFocus event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseEnter event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseLeave event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseUp event.
            </summary>
            <param name="e"></param>                            
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXControl.PaintFocusRect(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method draws the focus rectangle
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXControl.IsPressed">
            <summary>
            Gets or sets a value that indicates whether the mouse is being clicked inside this control.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXControl.IsBrowsed">
            <summary>
            Gets or sets a value that indicates if the mouse is within the bounds of this control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.#ctor">
            <summary>
            This is the default constructor for the control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.BeginInit">
            <summary>
            Begins the initialization of this control. 
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.EndInit">
            <summary>
            Ends the initialization of the control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method overrides the mouse down so that we can determine when the user
            clicks on the thumb to start dragging it.  If a drag is started, we save the
            click point for calculating how far to move the mouse.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseEnter event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method overrides the mouse moves so that we can handle the browsing of
            the thumb as well as dragging of the thumb.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseLeave event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseUp event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the OnPaint handler so that we can paint the control the way 
            we want.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.PaintLabels(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the labels if the are specified.  Note: Currently only horizontal sliders support
            labels.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.OnValueChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.TrackBar.ValueChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.CalculatePositions">
            <summary>
            Calculates the track rectangle, foreground rectangle, and thumb positions
            based on the value of 'Value'
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.DoLargeMove(System.Drawing.Point)">
            <summary>
            TODO fix for flipped sliders
            </summary>
            <param name="cursorPos"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.DragThumb(System.Drawing.Point)">
            <summary>
            Drags the thumb along the track snapping it to each value.
            
            TODO - NewValue for Flipped controls is not quite correct.
            
            </summary>
            <param name="cursorPos"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.GetThumbPos(System.Drawing.Size)">
            <summary>
            Computes the thumb position.  Handles horizonal and vertical orientation.  If
            the Value is out of range or Maximum is less than or equal to Minimum, then 
            the ThumbPos is forced to the start of the track.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.GetTrackRect(System.Drawing.Size)">
            <summary>
            Computes the track rectangle.  Handles horizonal and vertical orientation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.GetTrackForeRect(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Calculates the foreground track rectangle.
            </summary>
            <param name="trackRect"></param>
            <param name="thumbPos"></param>
            <param name="imageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXSlider.IsPointInThumb(System.Drawing.Point)">
            <summary>
            Returns true if the given point is in the thumb's bounds.
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXSlider.ValueChanged">
            <summary>
            Occurs when Value property of the slider changes, either by movement of the thumb or by manipulation in code.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.FlipDirection">
            <summary>
            Gets or sets a value that indicates whether or not to flip the control direction.  If the 
            Orientation is Horizontal, then flipping the direction will cause the control to increase left
            to right.  If the Orientation is Vertical, then flipping the direction will cause the control
            to increase top to bottom.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value property when the 
            thumb is moved a large distance.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.Maximum">
            <summary>
            Gets or sets the upper limit of the range this control is working with.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.MaximumLabel">
            <summary>
            Gets or sets string value to display at the maximum range of the slider.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.Minimum">
            <summary>
            Gets or sets the lower limit of the range this control is working with.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.MinimumLabel">
            <summary>
            Gets or sets string value to display at the minimum range of the slider.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.Orientation">
            <summary>
            Gets or sets a value indicating the horizontal or vertical orientation of this control.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.SmallChange">
            <summary>
            Gets or sets the value added to or subtracted from the Value property when the thumb is moved
            a small distance.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.ThumbImage">
            <summary>
            Gets or sets the thumb image.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.TrackBackColor">
            <summary>
            Gets or sets the background color of the track.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.TrackForeColor">
            <summary>
            Gets or sets the foreground color of the track.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.TrackWidth">
            <summary>
            Gets or sets the width of the track.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.UpdateValueWhileDraggingThumb">
            <summary>
            Gets or sets a value that indicates whether or not
            the slider updates the Value with the thumb is dragging.  Windows
            SliderBar controls work this way.  If this value is set to false,
            the update of 'Value' will occur when the Thumb stops dragging.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the thumb
            on the track bar.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.IsThumbPressed">
            <summary>
            Gets or sets a value indicating whether the Thumb is pressed
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXSlider.IsThumbBrowsed">
            <summary>
            Gets or sets a value indicating whether the Thumb is browsed
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXSliderLightUI">
            <summary>
            This class implements a slider control that is drawn on a parent whose background is light colored.
            
            TODO - Need from Jaclyn -> color values for track back/fore color
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXToggleSwitchDarkUI">
            <summary>
            This class implements a toggle switch that is drawn on a parent whose background is dark.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch">
            <summary>
            This class implements a ToggleSwitch according to the Dell UI Design Language
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXCheckBox">
            <summary>
            This class implements a checkbox according to the Dell UI Design Language
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.#ctor">
            <summary>
            This is the default constructor for the control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the OnPaint handler so that we can make it look like we want
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.AutoSizeControl">
            <summary>
            This method is called when some property changes that is affected by AutoSize.  We
            have to calculate a minimum size and set it because the .NET CheckBox class does not
            properly calculate the size since our image is different than their check image.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.CalculateMinimumSize">
            <summary>
            This method calculates a minumize size of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBox.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBox.AutoSize">
            <summary>
            Override the setting of the AutoSize property so we can perform our own minimum sizing;
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBox.MinimumSize">
            <summary>
            Override the setting of of MinimumSize property so we can deal with a problem in the 
            .NET CheckBox class whereby it does not properly compute the size of the control if
            AutoSize is enabled.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBox.Text">
            <summary>
            Override the setting of the Text property so we can perform our own minimum sizing;
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.#ctor">
            <summary>
            This is the default constructor for the control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.AutoToggleText">
            <summary>
            This method chooses the appropriate text based upon the AutoTextStyle 
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.Text">
            <summary>
            Override the setting of the Text property so we can perform our own minimum sizing;
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.AutoTextStyle">
            <summary>
            This property sets an AutoTextStyle which defines whether or not to choose
            predefined values like on/off, enabled/disabled, etc
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.SwitchAlign">
            <summary>
            Property to control where the switch is aligned within the bounds of the control.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.ToggleSwitchAutoTextStyle">
            <summary>
            This enumeration specifies whether to do automatic text label updating and if so, what
            text string combinations to use. 
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.ToggleSwitchAutoTextStyle.None">
            <summary>
            Do not do automatic text update for this toggle switch.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.ToggleSwitchAutoTextStyle.OnOff">
            <summary>
            Use "On" and "Off" localized text strings for this toggle switch.  
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.ToggleSwitchAutoTextStyle.YesNo">
            <summary>
            Use "Yes" and "No" localized text strings for this toggle switch.  
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXToggleSwitch.ToggleSwitchAutoTextStyle.EnabledDisabled">
            <summary>
            Use "Enabled" and "Disabled" localized text strings for this toggle switch.  
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToggleSwitchDarkUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXToggleSwitchDarkUI.ForeColor">
            <summary>
            Gets the foreground color of the control.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXToggleSwitchLightUI">
            <summary>
            This class implements a toggle switch that is drawn on a parent whose background is light.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToggleSwitchLightUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXDropDownMenu">
            <summary>
            This class defines a base control for the UX library.  This class 
            tracks whether the object is pressed (mouse down) or browsed (mouse enter/leave).  
            It also supplies virtual methods for handling painting.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXDropDownMenu.#ctor">
            <summary>
            This initializes the object in default state.  Note that this control enables transparent background
            support.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXDropDownMenu.AddItem(Dell.Client.Framework.UXLib.Controls.UXDropDownMenuItem,System.Int32)">
            <summary>
            Adds a DropDownMenuItem to the menu.
            </summary>
            <param name="item"></param>
            <param name="listOrder"></param>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXDropDownArrowLightUI">
            <summary>
            This class implements a UXBackButtonLightUI class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXDropDownArrowLightUI.#ctor">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXDropDownArrowDarkUI">
            <summary>
            This class implements a UXDropDownArrowDarkUI class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXDropDownArrowDarkUI.#ctor">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXTextButton">
            <summary>
            This class implements a text button.  Text buttons are like labels except
            that they may have different colors for hover, disabled, pressed, and normal states.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXLeftNavItem">
            <summary>
            This control implements a LeftNavItem.  This control can have subitems and is expandable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNavItem.GetFirstSubItem">
            <summary>
            This method returns the first subitem or null if there are no subitems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNavItem.FindSubItem(System.Int32)">
            <summary>
            Finds a subitem by item index
            </summary>
            <param name="itemIdx">The item index to find</param>
            <returns>null or the UXLeftNavItem</returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNavItem.FindSubItemIdx(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem)">
            <summary>
            Finds a subitems item index
            </summary>
            <param name="navItem">The UXLeftNavItem to find the index of</param>
            <returns>The index or -1 if the sub item does not exist</returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXRadioButtonDarkUI">
            <summary>
            This class implements a radio button that is drawn on a parent whose background is dark.  
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXRadioButton">
            <summary>
            This class implements a radiobutton according to the Dell UI Design Language
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.#ctor">
            <summary>
            This is the default constructor for the control.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the OnPaint handler so that we can make it look like we want
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.AutoSizeControl">
            <summary>
            This method is called when some property changes that is affected by AutoSize.  We
            have to calculate a minimum size and set it because the .NET CheckBox class does not
            properly calculate the size since our image is different than their check image.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.CalculateMinimumSize">
            <summary>
            This method calculates a minumize size of the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control's background and supports transparency.  In 
            Windows Forms, there really isn't true transparency, so the only way to correctly
            handle this is to paint the parent's background and all of its controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButton.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXRadioButton.AutoSize">
            <summary>
            Override the setting of the AutoSize property so we can perform our own minimum sizing;
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXRadioButton.MinimumSize">
            <summary>
            Override the setting of of MinimumSize property so we can deal with a problem in the 
            .NET CheckBox class whereby it does not properly compute the size of the control if
            AutoSize is enabled.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXRadioButton.Text">
            <summary>
            Override the setting of the Text property so we can perform our own minimum sizing;
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButtonDarkUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXRadioButtonLightUI">
            <summary>
            This class implements a radio button that is drawn on a parent whose background is light.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXRadioButtonLightUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXCheckBoxLightUI">
            <summary>
            This class implements a checkbox that is drawn on a parent whose background is dark.  
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBoxLightUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBoxLightUI.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXCheckBoxDarkUI">
            <summary>
            This class implements a checkbox that is drawn on a parent whose background is dark.  
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXCheckBoxDarkUI.SetImage">
            <summary>
            Sets the appropriate image based upon the state of the control as defined in the UI
            style guidelines.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXCheckBoxDarkUI.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXTile">
            <summary>
            This class implements a Tile control which is like a button but contains a title string,
            sub title string, and a detail string.  The fonts and padding are all controlled
            by the UXStyleGuides class as specified by EDG.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTile.#ctor">
            <summary>
            Initializes a new instance of the class in default state.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTile.#ctor(System.Drawing.Image,System.Drawing.Image,System.String,System.String,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the class and set the images, strings and text colors.
            </summary>
            <param name="imageNormal">Background image to display in normal state.</param>
            <param name="imageHover">Background image to display when the control is browsed.</param>
            <param name="strTitleText"></param>
            <param name="strSubTitleText"></param>
            <param name="strDetailText"></param>
            <param name="colorTitleText"></param>
            <param name="colorSubTitle"></param>
            <param name="colorDetailText"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTile.SetTileImages(System.Drawing.Image,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Sets the tile background images.
            </summary>
            <param name="imageNormal"></param>
            <param name="imageHover"></param>
            <param name="imagePress"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXTile.PerformClick">
            <summary>
            Raises a click event on the button.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.Text">
            <summary>
            Gets or sets the title text string.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.TitleTextColor">
            <summary>
            Gets or sets the title text color.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.SubTitleText">
            <summary>
            Gets or sets the sub title text string.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.SubTitleTextColor">
            <summary>
            Gets or sets the sub title text color.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.DetailText">
            <summary>
            Gets or sets the detail text string.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXTile.DetailTextColor">
            <summary>
            Gets or sets the detail text color.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXBackButtonLightUI">
            <summary>
            This class implements a UXBackButtonLightUI class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXBackButtonLightUI.#ctor">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXBackButtonDarkUI">
            <summary>
            This class implements a UXBackButtonDarkUI class which is a special type of UXImageButton
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXBackButtonDarkUI.#ctor">
            <summary>
            Initializes the object in default state.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXWindowControlsLightUI">
            <summary>
            Initializes a new instance of the class with default settings for windows with 
            light background colors.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXWindowControls">
            <summary>
            This class implements the Window Controls user control.  This control has the Close, Minimize, Maximize,
            Restore, and Gear (Settings) buttons.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.#ctor">
            <summary>
            Initializes a new instance of the class with default settings.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.AddGearItem(System.String,System.Int32,System.EventHandler)">
            <summary>
            Adds a new menu item to the gear submenu.
            </summary>
            <param name="menuText">Text to display in the menu.</param>
            <param name="menuPosition">Relative position in the menu.</param>
            <param name="clickEvent">optional click event</param>
            <returns>The control created for the item.</returns>
            ReSharper disable once UnusedMethodReturnValue.Global
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.NotifyMaximized(System.Boolean)">
            <summary>
            Notify this control that the window is maximized so that it can display the proper
            buttons.
            </summary>
            <param name="bMaximized"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.InitButton(Dell.Client.Framework.UXLib.Controls.UXImageButton,System.String)">
            <summary>
            Initializes a Image button and sets its tooltip text.
            </summary>
            <param name="button"></param>
            <param name="toolTipText"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.OnButtonClick(System.Object,System.EventArgs)">
            <summary>
            This method is called when a Windows control button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.OnGearMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            This method is called when the gear button is released.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Controls.UXWindowControls.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControls.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.BackColor">
            <summary>
            Gets or sets the background color for the control.  This property is removed from the UI 
            designer since this property is defined by EDG.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.IsDarkUI">
            <summary>
            Sets the bitmaps for dark or light background.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.ForeColor">
            <summary>
            Gets or sets the foreground color for the control.  This property is removed from the UI 
            designer since this property is defined by EDG.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.HelpBox">
            <summary>
            Gets or sets a value that indicates whether the Help button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.MaximizeBox">
            <summary>
            Gets or sets a value that indicates whether the Maximize button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.MinimizeBox">
            <summary>
            Gets or sets a value that indicates whether the Minimize button is shown
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXWindowControls.WindowControlButtonsEnabled">
            <summary>
            Gets or sets a value indicating whether the window control buttons can respond to user interaction.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXWindowControls.CloseButtonClick">
            <summary>
            Occurs when the close button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXWindowControls.GearButtonClick">
            <summary>
            Occurs when the gear button is clicked.
            </summary>
        </member>
        <member name="E:Dell.Client.Framework.UXLib.Controls.UXWindowControls.HelpButtonClick">
            <summary>
            Occurs when the help button is clicked.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControlsLightUI.#ctor">
            <summary>
            Initializes a new instance of the class with default settings.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXWindowControlsDarkUI">
            <summary>
            This class implements the Window Controls 
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXWindowControlsDarkUI.#ctor">
            <summary>
            Initializes a new instance of the class with default settings for windows with 
            dark background colors.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXButtonLightUI">
            <summary>
            This class implements a button that is drawn on a parent whose background is light-colored.  
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXButtonDarkUI">
            <summary>
            This class implements a button that is drawn on a parent whose background is dark-colored.  
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXButtonBlueBg">
            <summary>
            This class implements a button that is drawn on a parent whose background is blue.  This
            class has been deprecated in favor of the UXButtonDarkUI button.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButtonBlueBg.OldClarity">
            <summary>
            By default, this class has been replaced by the UXButtonDarkUI class.  However, by setting this
            property to true, this object will revert to the old EDG Clarity specifications for a UXButtonBlueBg button.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXButtonWhiteBg">
            <summary>
            This class implements a button that is drawn on a parent whose background is white.  This
            class has been deprecated in favor of the UXButtonLightUI button.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXButtonWhiteBg.OldClarity">
            <summary>
            By default, this class has been replaced by the UXButtonLightUI class.  However, by setting this
            property to true, this object will revert to the old EDG Clarity specifications for a UXButtonWhiteBg button.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXContextMenuStrip">
            <summary>
            This class wraps the ContextMenuStrip class to implement EDG style guides.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult">
            <summary>
            Specifies the result value of a dialog box.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.None">
            <summary>
            No result
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Ok">
            <summary>
            The OK button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Cancel">
            <summary>
            The Cancel button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Abort">
            <summary>
            The Abort button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Retry">
            <summary>
            The Retry button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Ignore">
            <summary>
            The Ignore button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.Yes">
            <summary>
            The Yes button was pressed
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogResult.No">
            <summary>
            The No button was pressed
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons">
            <summary>
            Specifies the type of icons to show for the UXMessageBoxDialog class.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons.None">
            <summary>
            Do not show an icon
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons.Critical">
            <summary>
            Show a message box with a Critical icon
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons.Info">
            <summary>
            Show a message box with an Info icon
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons.Question">
            <summary>
            Show a message box with a Question icon
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons.Warning">
            <summary>
            Show a message box with a Warning icon
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons">
            <summary>
            Specifies the type of buttons to show for the dialog.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.None">
            <summary>
            Do not show any buttons
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.Ok">
            <summary>
            Show a dialog with an OK button.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.OkCancel">
            <summary>
            Show a dialog with OK and Cancel buttons.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.AbortRetryIgnore">
            <summary>
            Show a dialog with Abort, Retry and Ignore buttons
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.YesNoCancel">
            <summary>
            Show a dialog with Yes, No, and Cancel buttons.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.YesNo">
            <summary>
            Show a dialog with Yes and No buttons.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons.RetryCancel">
            <summary>
            Show a dialog with Retry and Cancel buttons.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxDialog">
            <summary>
            This class implements a MessageBox dialog styled according to EDG guidelines.  This class hides the presentation UI software
            stack from the caller.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxDialog.#ctor(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons)">
            <summary>
            Construct the object in default state by selecting the promptText, captionText, and button types to use.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxDialog.#ctor(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons,Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Construct the object in default state by selecting the promptText, captionText, and button types to use.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
            <param name="icon">Type of icon to display.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxDialog.CloseDialog">
            <summary>
            This method causes the dialog to close.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxDialog.ShowDialog">
            <summary>
            This method causes the dialog to show modally.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog">
            <summary>
            This class implements a toaster dialog styled according to EDG guidelines.  This class hides the presentation UI software
            stack from the caller.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.#ctor(Dell.Client.Framework.Common.ToasterMsgRequest)">
            <summary>
            Constructs the object in default state.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.CloseDialog">
            <summary>
            This method causes the dialog to close.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.Show">
            <summary>
            This method causes the dialog to show modelessly.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.ShowDialog">
            <summary>
            This method causes the dialog to show modally.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.IsActive">
            <summary>
            Gets a value indicating whether or not the dialog is active.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.UXToasterDialog.ToasterResult">
            <summary>
            Gets the toaster result.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.UXRebootDialog">
            <summary>
            This class implements a system Reboot/Shutdown dialog styled according to EDG guidelines.  This class hides the presentation UI software
            stack from the caller.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXRebootDialog.#ctor(System.String,System.Boolean,Dell.Client.Framework.Common.RebootPolicy)">
            <summary>
            Construct the object in default state
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="bShutdown">Boolean indicating whether to shutdown or just restart the system.</param>
            <param name="policy">The policies that control the number of delays, delay time, and warning time.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXRebootDialog.CloseDialog">
            <summary>
            This method causes the dialog to close.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.UXRebootDialog.ShowDialog">
            <summary>
            This method causes the dialog to show modally.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.#ctor(System.String)">
            <summary>
            Initializes the object and sets the header text.
            </summary>
            <param name="headerText">Text to display in the header area.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.SetIconPicture(System.Drawing.Image)">
            <summary>
            Sets the picture to use in the icon area.
            </summary>
            <param name="image">Specifies the image object or null if no picture is to be display.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.ResizeClientArea(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Gets the client pane height to use for the dialog.  Derived classes may override this value
            to adjust the height of the dialog.
            </summary>
            <param name="clientLocation"></param>
            <param name="clientSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.SetDefaultButtonHandler">
            <summary>
            Sets the default item handler for when the derived dialog does not implement its own handler
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.SetNumberOfButtons(System.Int32)">
            <summary>
            Sets the number of buttons to be used.
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.InitButtons">
            <summary>
            This method initializes the buttons based upon the item type.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.OnButtonClick(System.Object,System.EventArgs)">
            <summary>
            This event handler gets called when a item is pushed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.OnButtonPanelResize(System.Object,System.EventArgs)">
            <summary>
            Called when the panel is resized
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.OnFormLoad(System.Object,System.EventArgs)">
            <summary>
            This method is called when the form is loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.PositionButtons">
            <summary>
            This method positions the buttons within the item panel based upon the alignment type.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.PositionButtonsToCenter">
            <summary>
            This method positions the buttons with a center alignment.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.PositionButtonsToLeft">
            <summary>
            This method positions the buttons aligned with the left of the item panel.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.PositionButtonsToRight">
            <summary>
            This method positions the buttons aligned to the right of the item panel.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.ResizeForm">
            <summary>
            This is called to resize the dialog based upon the prompt length.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.ButtonAlignment">
            <summary>
            This method specifies how the buttons are aligned within the item pane.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.DialogButtons">
            <summary>
            This method specifies the type of buttons supported
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.HeaderText">
            <summary>
            Sets the header text string.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.StatusText">
            <summary>
            Sets the status text string.  The <see cref="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.ShowStatusText"/> property determines if the status text pane is visible.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.ShowStatusText">
            <summary>
            Gets or sets a value that indicates whether or not to show the status message pane.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.UXButtonAlignType">
            <summary>
            This enumerates how the buttons are to be aligned for the dialog object.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.UXButtonAlignType.Right">
            <summary>
            Align the buttons to the right side of the dialog.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.UXButtonAlignType.Left">
            <summary>
            Align the buttons to the left side of the dialog
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.BaseDialog.UXButtonAlignType.Center">
            <summary>
            Center the buttons in the middle of the dialog
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.PromptDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.PromptDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.PromptDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.PromptDialog.PromptText">
            <summary>
            Sets the prompt text string.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm">
            <summary>
            This object extends the base form and adds a masthead control for a title bar.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm.#ctor">
            <summary>
            Constructs the object in default state.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.MastheadForm.Text">
            <summary>
            Override set text to update the masthead text.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager">
            <summary>
            This class manages a list of active ToasterDialogs by positioning them so that they
            do not overlap each other, and moving them when a stacked toaster message expires.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.#ctor">
            <summary>
            This is the default constructor for the toaster manager.  It is intentionally
            private so that it can only be constructed via the static "Instance" method.
            This insures a singleton class in C#.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.ComputeDialogPositions">
            <summary>
            This method computes the Y-Positions that each toaster needs in order to be stacked on
            top of each other.  This array is used to determine how to position and animate each
            toaster.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.FindDialog(Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog)">
            <summary>
            Find the given dialog object in the list and return it's index
            or return -1 if not found.
            </summary>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.OnTimerTick(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            This method is called when the timer expires.  We loop through each dialog and move it if necessary.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.UpdateDialogPos(Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog,System.Int32)">
            <summary>
            This method updates the given dialog Y-position based on the intended final yPos that
            is passed in.  If the delta is greater than the StepSize, then the StepSize is used.
            </summary>
            <param name="dialog"></param>
            <param name="yPos"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterManager.Instance">
            <summary>
            Retrieves a static instance to this object.  If the object previously does not exist
            it will be constructed.  This method is thread-safe.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog">
            <summary>
            This class implements a MessageBox dialog styled according to EDG guidelines.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog.#ctor(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons)">
            <summary>
            Constructs the object in default state.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog.#ctor(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons,Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Constructs the object in default state allowing the prompt text, caption text, button style, and icon type
            to be specified.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
            <param name="icon">Type of icon to show.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog.SetIcon(Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Sets the icon for the message box
            </summary>
            <param name="icon"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog.Show(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.MessageBoxDialog.Show(System.String,System.String,Dell.Client.Framework.UXLib.Dialogs.UXDialogButtons,Dell.Client.Framework.UXLib.Dialogs.UXMessageBoxIcons)">
            <summary>
            Displays a message box with specified text, caption, and buttons.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="captionText">Text to display in the header.</param>
            <param name="buttons">Type of buttons to show.</param>
            <param name="icon">Type of icon to show.</param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.#ctor">
            <summary>
            Initializes the splash screen form according to EDG style specifications.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.#ctor(System.String)">
            <summary>
            Initializes a splash screen with the given title text.
            </summary>
            <param name="strTitleText"></param>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.StatusText">
            <summary>
            Gets or sets the status text in the splash screen.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Dialogs.WinForms.SplashScreenDialog.TitleText">
            <summary>
            Gets or sets the title text in the splash screen.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.LogEventHandler">
            <summary>
            Represents the method that will handle the log event.  The log message
            is passed in 'msg'.
            </summary>
            <param name="sender"></param>
            <param name="msg"></param>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.ConsoleTrayMenuSection">
            <summary>
            This defines the various sections of the Console's tray menu.  It is used in the
            AddTrayMenuItem() method to specify what section the menuitem belongs in.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePlugin">
            <summary>
            This interface defines the basic requirements of a class that wishes to plug into the Console.  If a plugin
            only desires to be loaded and has no UI, it can simply derive from this interface.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePagePlugin">
            <summary>
            This interface defines the requirements for plugging a display page into the Console client area.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsolePagePlugin.HeaderText">
            <summary>
            Returns the text to display in the Masthead header when this plugin is visible.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePanelPlugin">
            <summary>
            This interface defines the requirements for plugging a panel into the console.  Panels are associated with 
            navigation pages.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePanelPlugin.AssociatePage(Dell.Client.Framework.UXLib.IAcceptsPanelPlugins)">
            <summary>
            Called by the console to notify the panel what page interface is associated with this panel.
            </summary>
            <param name="pagePlugin"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePanelPlugin.OnActivate">
            <summary>
            Called when the panel is activated.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePanelPlugin.OnDeactivate">
            <summary>
            Called when the panel is deactivated.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsolePanelPlugin.PagePluginId">
            <summary>
            Returns the page identifier that this panel is to be associated with.  This will be the page that displays
            this panel.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsoleHomePagePlugin">
            <summary>
            This interface defines the requirements for plugging a home page into the Console client area.  
            There can be only one HomePagePlugin defined for the console.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsoleHomePagePlugin.AddControl(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Adds a control to the home page at the specified position.
            </summary>
            <param name="ctl"></param>
            <param name="position"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsoleHomePagePlugin.RemoveControl(System.Windows.Forms.Control)">
            <summary>
            Removes a control from the home page.
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IConsoleHomePagePlugin.HeaderText">
            <summary>
            Sets the text to display in the Masthead header when this plugin is visible.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IAcceptsPanelPlugins">
            <summary>
            This interface defines a the requirements to plug a NavPagePlugin into the Console.  NavPagePlugins
            are a special type of page plugin in that they manage PanelPlugins navigation.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IAcceptsPanelPlugins.CreateNavItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem,System.String,System.String,System.Int32,System.Windows.Forms.Control)">
            <summary>
            Creates a navigation item for the given page.
            </summary>
            <param name="parentItem">Parent item or null to create a top level left nav item.</param>
            <param name="text">Text to display in the nav item.</param>
            <param name="description">Description text to display if this is a top-level item.</param>
            <param name="listOrder">Relative order in the list.</param>
            <param name="ctl">Control to show when this nav item is selected, or null if this is a top-level item with children.</param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IAcceptsPanelPlugins.FindNavItem(System.String)">
            <summary>
            Finds a navigation item by text string or returns null if the item does not exist.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.IAcceptsPanelPlugins.PageId">
            <summary>
            Returns the identifier for this page.  This identifier is used by the console to associate panels 
            to pages.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsoleNavPagePlugin">
            <summary>
            This interface defines a the requirements to plug a NavPagePlugin into the Console.  NavPagePlugins
            are a special type of page plugin in that they manage PanelPlugins navigation.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePolicyPagePlugin">
            <summary>
            This interface defines the requirements to plug a NavPage into the Console.  NavPages provide
            navigation of panel plugins.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePluginSupportsActivations">
            <summary>
            This interface defines the requirements for plugin that supports activation/deactivation events
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePluginSupportsActivations.OnActivated">
            <summary>
            Called when plugin is being activated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePluginSupportsActivations.OnDeactivated">
            <summary>
            Called when plugin is being deactivated.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IConsolePluginSupportsDirtyPages">
            <summary>
            This interface defines the requirements for a plugin that supports dirty pages
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePluginSupportsDirtyPages.IsPageDirty(System.String@)">
            <summary>
            Indicates whether the property page has changed since it was activated or since 
            the most recent call to Apply.  If this obj returns true, then a page name may optionally
            be returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.IConsolePluginSupportsDirtyPages.SaveDirtyPage">
            <summary>
            Called when the user is closing the application and settings need to be saved.  The
            method may return 'false' to prevent the close from occurring.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IWizardPagePlugin">
            <summary>
            This interface defines the requirements for a wizard page plugin.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.IWizardPanelPlugin">
            <summary>
            This interface defines the requirements for plugging a panel into a wizard page.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.SaveFormBounds">
            <summary>
            This class implements the SaveFormBounds class which maintains the application bound information in the registry
            so that application's window size and position can be remembered.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with the given registry key path.
            </summary>
            <param name="regKeyPath"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the class with the given registry key path and key value.
            </summary>
            <param name="regKeyPath"></param>
            <param name="regKeyValue"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.LoadState(System.Windows.Forms.Form)">
            <summary>
            This method loads and sets the given form's size and position based upon the saved values in the registry.
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.LoadState(System.Windows.Forms.Form,System.Drawing.Size)">
            <summary>
            This method loads and sets the given form's size and position based upon the saved values in the registry.
            </summary>
            <param name="form"></param>
            <param name="defaultSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.LoadState(System.Windows.Forms.Form,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            This method loads and sets the given form's size and position based upon the saved values in the registry.
            </summary>
            <param name="form"></param>
            <param name="defaultSize"></param>
            <param name="headerSize"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.SaveState(System.Windows.Forms.Form)">
            <summary>
            This method saves the given form's bounds in the registry.
            </summary>
            <param name="f"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.GetRegKeyRect(System.Drawing.Rectangle@)">
            <summary>
            Gets the rectangle value from the registry key. 
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.SaveFormBounds.SetRegKeyRect(System.Drawing.Rectangle)">
            <summary>
            Sets the rectangle value in the registry.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.UXFonts">
            <summary>
            This class manages the Museo for Dell fonts by installing them into a private font
            collection and then managing the mapping of the fonts depending on locale.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.UXFonts.#ctor">
            <summary>
            This is the default constructor for the class.  It is intentionally
            private so that it can only be constructed via the static "Instance" method.
            This insures a singleton class in C#.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.UXFonts.GetMuseoFont(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            Finds the requested Museo font in the font collection and returns the font object.  
            </summary>
            <param name="FontFamily"></param>
            <param name="emSize"></param>
            <param name="style"></param>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.UXFonts.IsMuseoAvailable">
            <summary>
            Returns a boolean indicating whether or not the Museo fonts are available.  To be available, the fonts have to be 
            loaded and we have to be on an English system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.UXFonts.InstallFont(System.Byte[])">
            <summary>
            This method installs a font from the resource into the font collection.  Note that the 
            call to AddFontMemResourceEx is required to get around a .NET bug.
            </summary>
            <param name="font"></param>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.UXFonts.Instance">
            <summary>
            Retrieves a static instance to this object.  If the object previously does not exist
            it will be constructed.  This method is thread-safe.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXScrollBar">
            <summary>
            This class is the base class for all scroll bars
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This method paints the control with the track color.  The arrow buttons and thumb are child controls which
            paint themselves.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXScrollBar.OnResize(System.EventArgs)">
            <summary>
            This method overrides the resize method so as to position the arrow buttons and thumb correctly.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXScrollBar.RecalculateThumb">
            <summary>
            This method resizes and repositions the thumb control
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXScrollBar.RepositionThumb">
            <summary>
            This method repositions the thumb within the track rectangle based upon its size and the 
            current scrollbar Value.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXScrollBar.ResizeThumb">
            <summary>
            This method resizes the thumb control based upon the Maximum and Minimum values
            Here is the math:
                ThumbSize / ScrollBarSize = PageSize / ScrollBarRange
                ThumbSize = ScrollBarSize * PageSize / ScrollBarRange
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.#ctor">
            <summary>
            This constructor creates a left navigation control which maintains a list
            of left navigation items.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.AddItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem,System.Int32)">
            <summary>
            This method adds the left nav item to the list based upon its list order and parent
            </summary>
            <param name="item"></param>
            <param name="listOrder"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.FindItem(System.String)">
            <summary>
            This method finds the first nav item based upon text string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.GetFirstItem">
            <summary>
            This method returns the first item in the list of controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.PaintFrame(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Paints onto the Window frame
            </summary>
            <param name="e"></param>
            <param name="clientRect"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXLeftNav.SelectItem(Dell.Client.Framework.UXLib.Controls.UXLeftNavItem)">
            <summary>
            This public method selects a left navigation item. 
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Controls.UXListView">
            <summary>
            This class implements a mostly "flicker-free" ListView control and adds the 
            ability to sort ascending and descending by column.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the window proc to provide a flicker-free redraw
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXListView.OnColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            This method adds the ability to sort ascending and descending by column.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXListView.ShowListViewColumnIcon(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            This static method shows the appropriate header icon for a listview's column depending
            upon the sort order.
            </summary>
            <param name="list"></param>
            <param name="columnIndex"></param>
            <param name="sortOrder"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXListView.UXListViewItemComparer.Compare(System.Object,System.Object)">
            <summary>
            This is a special compare method for the FastListView class.  It will look to see if the
            listview item's Tag object has been set and if so, it will compare those based upon the object
            types that it understands (currently longs, ulongs, and DateTimes).  Otherwise it compares based
            upon the Text string property.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXPanel2.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXPanel2.AutoScroll">
            <summary>
            Gets or sets a value indicating whether the container enables the user to scroll 
            to any controls placed outside of its visible boundaries.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXPanel2.AutoScrollMargin">
            <summary>
            Gets or sets the size of the auto-scroll margin.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXPanel2.AutoScrollMinSize">
            <summary>
            Gets or sets the minimum size of the auto-scroll.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Controls.UXPanel2.AutoScrollPosition">
            <summary>
            Gets or sets the location of the auto-scroll position.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.UXStyleGuides">
            <summary>
            This class defines the UX style guidelines as desired by Dell EDG.
            These values are derived from Jaclyn Taylor's Style Guides documents
            on Box.com.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsolePadding">
            <summary>
            clientPadding for the main console window.  The large bottom value is to allow for a footer to appear on each page.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleMinWindowSize">
            <summary>
            Minimum windows size - set to Size.Empty to allow any minimum size
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleMaxWindowSize">
            <summary>
            Maximum window size - set to Size.Empty to allow size
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleDefWindowSize">
            <summary>
            Sets the default size for the window when it is first run.  The size is remembered in the registry
            after first run.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleFooterColor">
            <summary>
            Defines the foolter text color.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleFooterFont">
            <summary>
            Defines the footer font.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.UXStyleGuides.AppConsoleFooterRightPad">
            <summary>
            Defines the right padding value for the footer.  The footer is positioned horizontally in the middle of the AppConsolePadding.bottom
            value.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Controls.UXToolTip.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            Overrides the base SetToolTip method to reformat the text so that it wraps at the desired location.
            </summary>
            <param name="control"></param>
            <param name="caption"></param>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog">
            <summary>
            This class implements a Reboot/Shutdown dialog styled according to EDG guidelines.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.#ctor(System.String,System.Boolean,Dell.Client.Framework.Common.RebootPolicy)">
            <summary>
            Constructs the object in default state.
            </summary>
            <param name="promptText">Text to display in the prompt.</param>
            <param name="bShutdown">Boolean indicating whether to shutdown or just restart the system.</param>
            <param name="policy">The policies that control the number of delays, delay time, and warning time.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.Countdown(System.Boolean)">
            <summary>
            Called to restart or stop the countdown time.
            </summary>
            <param name="bStart"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.OnCountdownTimerTick(System.Object,System.EventArgs)">
            <summary>
            Called when the countdown timer ticks.  If the timer seconds go to zero,
            we commence with the restart otherwise, we display the time left in the 
            status message.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.OnDelayClick(System.Object,System.EventArgs)">
            <summary>
            Called when the user chooses to delay the restart if policy allows them to do so.
            Because Windows Forms timers do not run if the dialog is hidden, we have to use
            go to sleep.  Note the calling thread will not return from this method until the delay
            has expired.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.OnFormLoad(System.Object,System.EventArgs)">
            <summary>
            Called when the form loads. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.OnRestartClick(System.Object,System.EventArgs)">
            <summary>
            Called when the user clicks the restart button.  We force an immediate restart/shutdown.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.RebootDialog.Restart">
            <summary>
            This method actually performs the shutdown or restart.  It is called if the countdown timer
            expires or the user chooses to restart/shutdown now.  
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog">
            <summary>
            This class implements the Toaster dialogs utilizing Windows Forms.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog.CloseDialog">
            <summary>
            This public method is supplied so that a thread which did not create this dialog may
            request that it be closed.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.ToasterDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dell.Client.Framework.UXLib.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.WinApi.GetWindowPlacement(System.IntPtr,Dell.Client.Framework.UXLib.WinApi.WINDOWPLACEMENT@)">
            <summary>
            Retrieves the show state and the restored, minimized, and maximized positions of the specified window.
            </summary>
            <param name="hWnd">
            A handle to the window.
            </param>
            <param name="lpwndpl">
            A pointer to the WINDOWPLACEMENT structure that receives the show state and position information.
            <para>
            Before calling GetWindowPlacement, set the length member to sizeof(WINDOWPLACEMENT). GetWindowPlacement fails if lpwndpl-> length is not set correctly.
            </para>
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            <para>
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </para>
            </returns>
        </member>
        <member name="T:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions">
            <summary>Options available when a form is tested for mose positions.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.Error">
            <summary>
            HTERROR: On the screen background or on a dividing line between windows 
            (same as HTNOWHERE, except that the DefWindowProc function produces a system 
            beep to indicate an error).
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.TransparentOrCovered">
            <summary>
            HTTRANSPARENT: In a window currently covered by another window in the 
            same thread (the message will be sent to underlying windows in the same thread 
            until one of them returns a code that is not HTTRANSPARENT).
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.NoWhere">
            <summary>
            HTNOWHERE: On the screen background or on a dividing line between 
            windows.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.ClientArea">
            <summary>HTCLIENT: In a client area.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.TitleBar">
            <summary>HTCAPTION: In a title bar.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.SystemMenu">
            <summary>HTSYSMENU: In a window menu or in a Close button in a child window.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.GrowBox">
            <summary>HTGROWBOX: In a size box (same as HTSIZE).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.Menu">
            <summary>HTMENU: In a menu.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.HorizontalScrollBar">
            <summary>HTHSCROLL: In a horizontal scroll bar.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.VerticalScrollBar">
            <summary>HTVSCROLL: In the vertical scroll bar.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.MinimizeButton">
            <summary>HTMINBUTTON: In a Minimize button. </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.MaximizeButton">
            <summary>HTMAXBUTTON: In a Maximize button.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.LeftSizeableBorder">
            <summary>HTLEFT: In the left border of a resizable window (the user can click 
            the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.RightSizeableBorder">
            <summary>HTRIGHT: In the right border of a resizable window (the user can click 
            the mouse to resize the window horizontally).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.TopSizeableBorder">
            <summary>HTTOP: In the upper-horizontal border of a window.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.TopLeftSizeableCorner">
            <summary>HTTOPLEFT: In the upper-left corner of a window border.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.TopRightSizeableCorner">
            <summary>HTTOPRIGHT: In the upper-right corner of a window border.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.BottomSizeableBorder">
            <summary>HTBOTTOM: In the lower-horizontal border of a resizable window (the 
            user can click the mouse to resize the window vertically).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.BottomLeftSizeableCorner">
            <summary>HTBOTTOMLEFT: In the lower-left corner of a border of a resizable 
            window (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.BottomRightSizeableCorner">
            <summary>HTBOTTOMRIGHT: In the lower-right corner of a border of a resizable 
            window (the user can click the mouse to resize the window diagonally).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.NonSizableBorder">
            <summary>HTBORDER: In the border of a window that does not have a sizing 
            border.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.Object">
            <summary>HTOBJECT: Unknown...No Documentation Found</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.CloseButton">
            <summary>HTCLOSE: In a Close button.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.HelpButton">
            <summary>HTHELP: In a Help button.</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.SizeBox">
            <summary>HTSIZE: In a size box (same as HTGROWBOX). (Same as GrowBox).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.ReduceButton">
            <summary>HTREDUCE: In a Minimize button. (Same as MinimizeButton).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.WindowHitTestRegions.ZoomButton">
            <summary>HTZOOM: In a Maximize button. (Same as MaximizeButton).</summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Hide">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Normal">
            <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowMinimized">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Maximize">
            <summary>
            Maximizes the specified window.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowMaximized">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>      
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowNoActivate">
            <summary>
            Displays a window in its most recent size and position. This value
            is similar to Show, except the window is not actived.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Show">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Minimize">
            <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowMinNoActive">
            <summary>
            Displays the window as a minimized window. 
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowNA">
            <summary>
            Displays the window in its current size and position. 
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.Restore">
            <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ShowDefault">
            <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.WinApi.ShowWindowCommands.ForceMinimize">
            <summary>
             <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.OnFormLoad(System.Object,System.EventArgs)">
            <summary>
            This is the event handler that is called when the form is loaded.  This is where the dialog is
            dynamically sized based up the text string and control visibilities.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.OnTextChanged(System.Object,System.EventArgs)">
            <summary>
            This method gets called when either text box changes. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.UpdateControls">
            <summary>
            This method sets then enable state of the ok item based
            upon the number of characters in the text boxes and if 
            they match.
            </summary>
        </member>
        <member name="F:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dell.Client.Framework.UXLib.Dialogs.WinForms.GetPasswordDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
